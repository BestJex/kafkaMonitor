{"version":3,"sources":["webpack:///./src/api/kafkaOperateApi.js","webpack:///src/components/pages/kafka/operate/Topic.vue","webpack:///./src/components/pages/kafka/operate/Topic.vue?c8be","webpack:///./src/components/pages/kafka/operate/Topic.vue","webpack:///./src/api/zookeeperApi.js"],"names":["getTopicListUrl","createTopicUrl","deleteTopicUrl","topicExistsUrl","getTopicPartitionDetailUrl","Topic","name","data","zookeeper","zookeeperList","topicList","partitions","replication","topic","topicTableData","topicSearch","addTopicDialogShow","topicPartitionDetailDialogShow","addTopicForm","rules","topicPartitionDetailTableData","loading","kafkaManagerAddress","methods","[object Object]","this","getTopicListMethod","request","get","then","response","code","Date","i","length","push","Object","zookeeperApi","index","row","formatCreateDate","column","date","createDate","date_default","a","format","deleteTopic","$message","showClose","message","type","topicTableDataCopy","msg","console","log","$confirm","confirmButtonText","cancelButtonText","deleteTopicMethod","catch","resetForm","formName","$refs","validate","valid","handleDialogClose","$nextTick","undefined","resetFields","getZooKeeperServerListMethod","operate_Topic","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","margin-bottom","attrs","gutter","span","offset","_v","href","target","placeholder","size","on","change","zookeeperChangeMethod","model","value","callback","$$v","expression","_l","item","key","label","address","float","_s","color","font-size","click","$event","$router","margin","directives","rawName","width","filter","toLowerCase","includes","prop","sortable","formatter","align","scopedSlots","_u","fn","scope","effect","content","placement","plain","icon","getTopicPartitionDetailMethod","$index","handleDelete","title","visible","open","handleDialogOpen","close","ref","status-icon","label-width","$set","slot","submitForm","update:visible","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","getZooKeeperServerListUrl","deleted","post","saveZookeeperServerUrl","testConnUrl","__WEBPACK_IMPORTED_MODULE_0__request__"],"mappings":"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","file":"static/js/5.53d0536e806a8c9e32cd.js","sourcesContent":["import request from \"../request\";\n\nconst getTopicListUrl = \"/kafka/operate/getTopicList\";\nconst createTopicUrl = \"/kafka/operate/createTopic\";\nconst deleteTopicUrl = \"/kafka/operate/deleteTopic\";\nconst topicExistsUrl = \"/kafka/operate/topicExists\";\n//获取分区数据详情\nconst getTopicPartitionDetailUrl = \"/kafka/operate/getTopicPartitionDetail\";\n\nexport function getTopicList(zookeeper) {\n  return request.get(getTopicListUrl, {zookeeper: zookeeper});\n}\n\nexport function createTopic(zookeeper, topic, partitions, replication) {\n  return request.get(createTopicUrl, {\n    zookeeper: zookeeper,\n    topic: topic,\n    partitions: partitions,\n    replication: replication\n  });\n}\n\nexport function deleteTopic(zookeeper, topic) {\n  return request.get(deleteTopicUrl, {zookeeper: zookeeper, topic: topic});\n}\n\nexport function topicExists(zookeeper, topic) {\n  return request.get(topicExistsUrl, {zookeeper: zookeeper, topic: topic});\n}\n\nexport function getTopicPartitionDetail(zookeeper, topic) {\n  return request.get(getTopicPartitionDetailUrl, {zookeeper: zookeeper, topic: topic});\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/kafkaOperateApi.js","<template>\n  <div class=\"container\">\n    <el-row :gutter=\"5\" style=\"margin-bottom: 20px\">\n      <el-col :span=\"4\" :offset=\"19\">\n        <span>更多功能：</span><el-link :href=\"kafkaManagerAddress\" target=\"_blank\" type=\"primary\">KafkaManager</el-link>\n      </el-col>\n    </el-row>\n    <el-divider/>\n    <el-row :gutter=\"5\">\n      <el-col :span=\"3\"><span>请选择zookeeper</span></el-col>\n      <el-col :span=\"4\">\n        <el-select v-model=\"zookeeper\" placeholder=\"请选择zookeeper\"\n                   @change=\"zookeeperChangeMethod\" size=\"mini\">\n          <el-option v-for=\"(item,index) in zookeeperList\"\n                     :key=\"index\"\n                     :label=\"item.name\"\n                     :value=\"item.address\">\n            <span style=\"float: left\">{{ item.name }}</span>\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.address }}</span>\n          </el-option>\n        </el-select>\n      </el-col>\n      <el-col :span=\"5\">\n        <el-button type=\"primary\" size=\"mini\" @click=\"$router.push('/zookeeper/zookeeperServer')\">zookeeper管理\n        </el-button>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\" style=\"margin: 40px 0 0 0\">\n      <el-col :span=\"4\">\n        <el-button type=\"primary\" size=\"mini\" @click=\"addTopicDialogShow = true\">添加Topic</el-button>\n      </el-col>\n    </el-row>\n    <el-table\n      v-loading=\"loading\"\n      :data=\"topicTableData.filter(data => !topicSearch || data.topic.toLowerCase().includes(topicSearch.toLowerCase()))\"\n      style=\"width: 870px\">\n      <el-table-column\n        prop=\"topic\"\n        label=\"Topic名称\"\n        width=\"400\">\n      </el-table-column>\n      <el-table-column\n        sortable\n        prop=\"createDate\"\n        label=\"创建日期\"\n        :formatter=\"formatCreateDate\"\n        width=\"150\">\n      </el-table-column>\n      <el-table-column\n        prop=\"createBy\"\n        label=\"创建人\"\n        width=\"120\">\n      </el-table-column>\n      <el-table-column\n        align=\"right\" width=\"200\">\n        <template slot=\"header\" slot-scope=\"scope\">\n          <el-input\n            v-model=\"topicSearch\"\n            size=\"mini\"\n            placeholder=\"输入关键字搜索\"></el-input>\n        </template>\n        <template slot-scope=\"scope\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"分区详情\" placement=\"top-start\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              plain\n              icon=\"el-icon-view\"\n              @click=\"getTopicPartitionDetailMethod(scope.$index, scope.row)\">\n            </el-button>\n          </el-tooltip>\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"删除\" placement=\"top-start\">\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              plain\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.$index, scope.row)\">\n            </el-button>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n\n\n    <!--新增topic弹窗-->\n    <el-dialog title=\"添加Topic\"\n               :visible=\"addTopicDialogShow\"\n               width=\"45%\" @open=\"handleDialogOpen\" @close=\"handleDialogClose\">\n      <el-form ref=\"addTopicForm\" :model=\"addTopicForm\" status-icon label-width=\"100px\"\n               class=\"demo-ruleForm\">\n        <el-form-item label=\"Topic名称\" prop=\"topic\">\n          <el-col :span=\"20\">\n            <el-input v-model=\"addTopicForm.topic\"></el-input>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"分区数\" prop=\"partitions\">\n          <el-col :span=\"20\">\n            <el-input v-model=\"addTopicForm.partitions\"></el-input>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"副本数\" prop=\"replication\">\n          <el-col :span=\"20\">\n            <el-input v-model=\"addTopicForm.replication\"></el-input>\n          </el-col>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addTopicDialogShow = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm('addTopicForm')\">添 加</el-button>\n      </div>\n      <!--</router-link>-->\n    </el-dialog>\n\n\n    <el-dialog title=\"分区详情\"\n               :visible.sync=\"topicPartitionDetailDialogShow\" width=\"55%\">\n      <el-table\n        :data=\"topicPartitionDetailTableData\"\n        style=\"width: 800px\">\n        <el-table-column\n          prop=\"topic\"\n          label=\"Topic\"\n          width=\"350\">\n        </el-table-column>\n        <el-table-column\n          prop=\"partition\"\n          label=\"分区\"\n          width=\"50\">\n        </el-table-column>\n        <el-table-column\n          prop=\"address\"\n          label=\"副本分布\"\n          width=\"400\">\n        </el-table-column>\n      </el-table>\n      <!--</router-link>-->\n    </el-dialog>\n  </div>\n\n</template>\n\n<script>\n\n  import {\n    getTopicList,\n    createTopic,\n    deleteTopic,\n    topicExists,\n    getTopicPartitionDetail\n  } from '../../../../api/kafkaOperateApi';\n  import dateUtil from 'element-ui/src/utils/date';\n  import {getZooKeeperServerList, saveZookeeperServer, testConn} from '../../../../api/zookeeperApi'\n\n\n  export default {\n    name: \"\",\n    data() {\n      return {\n        zookeeper: '',\n        zookeeperList: [],\n        topicList: [],\n        partitions: 1,\n        replication: 1,\n        topic: 'hxh_test',\n        topicTableData: [],\n        topicSearch: '',\n        addTopicDialogShow: false,\n        topicPartitionDetailDialogShow: false,\n        addTopicForm: {\n          topic: '',\n          replication: 2,\n          partitions: 4\n\n        },\n        rules: {\n          // topic: [\n          //   {validator: checkTopic, trigger: 'blur'}\n          // ],\n          // server: [\n          //   {validator: checkServer, trigger: 'blur'}\n          // ],\n          // group: [\n          //   {validator: checkGroup, trigger: 'blur'}\n          // ]\n        },\n        topicPartitionDetailTableData: [],\n        loading: true,\n        kafkaManagerAddress: 'http://10.80.0.77:9000/'\n      }\n    },\n    methods: {\n      zookeeperChangeMethod() {\n        this.getTopicListMethod();\n      },\n      getTopicListMethod() {\n        if (!this.zookeeper || this.zookeeper === '') {\n          this.loading = false;\n          return;\n        }\n        this.loading = true;\n        getTopicList(this.zookeeper).then(response => {\n          if (response) {\n            let data = response.data;\n            if (data.code === 200) {\n              data = data.data;\n              this.topicList = [];\n              this.topicTableData = [];\n              let date = new Date();\n              for (let i = 0; i < data.length; i++) {\n                this.topicList.push(data[i].topic);\n                this.topicTableData.push(data[i]);\n              }\n            }\n          }\n          this.loading = false;\n        });\n      },\n      getZooKeeperServerListMethod() {\n        getZooKeeperServerList().then(response => {\n          if (response) {\n            let data = response.data;\n            if (data.code === 200) {\n              data = data.data;\n              this.zookeeperList = [];\n              for (let i = 0; i < data.length; i++) {\n                this.zookeeperList.push(data[i]);\n              }\n            }\n          }\n        });\n      },\n      getTopicPartitionDetailMethod(index, row) {\n        getTopicPartitionDetail(this.zookeeper, row.topic).then(response => {\n          if (response) {\n            let data = response.data;\n            if (data.code === 200) {\n              this.topicPartitionDetailTableData = [];\n              data = data.data;\n              for (let i = 0; i < data.length; i++) {\n                this.topicPartitionDetailTableData.push(data[i]);\n              }\n              this.topicPartitionDetailDialogShow = true;\n            }\n          }\n        })\n      },\n      formatCreateDate: function (row, column) {\n        let date = new Date(row.createDate);\n        return dateUtil.format(date, 'yyyy-MM-dd HH:mm:ss');\n      },\n      deleteTopicMethod(zookeeper, topic) {\n        deleteTopic(zookeeper, topic).then(response => {\n          if (response) {\n            let data = response.data;\n            if (data.code === 200) {\n              this.$message({\n                //消息弹窗组件,类似toast\n                showClose: true,\n                message: topic + '删除成功',\n                type: 'success'\n              });\n              //topic 的变化不会这么快，确定删除后，直接改变数组内数据即可\n              let topicTableDataCopy = this.topicTableData;\n              this.topicTableData = [];\n              for (let i = 0; i < topicTableDataCopy.length; i++) {\n                if (topicTableDataCopy[i].topic !== topic) {\n                  this.topicTableData.push(topicTableDataCopy[i]);\n                }\n              }\n            } else {\n              this.$message({\n                //消息弹窗组件,类似toast\n                showClose: true,\n                message: data.msg,\n                type: 'error'\n              });\n            }\n          }\n        });\n      },\n      topicExistsMethod() {\n        topicExists(this.zookeeper, this.topic).then(response => {\n          if (response) {\n            let data = response.data;\n            if (data.code === 200) {\n              this.$message({\n                //消息弹窗组件,类似toast\n                showClose: true,\n                message: this.topic + \"存在\",\n                type: 'success'\n              });\n            } else if (data.code === 201) {\n              this.$message({\n                //消息弹窗组件,类似toast\n                showClose: true,\n                message: this.topic + \"不存在\",\n                type: 'success'\n              });\n            } else {\n              this.$message({\n                //消息弹窗组件,类似toast\n                showClose: true,\n                message: data.msg,\n                type: 'error'\n              });\n            }\n          }\n        });\n      },\n      handleEdit(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        this.$confirm('确定删除?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          //id, address, name, isDeleted, tag\n          this.deleteTopicMethod(this.zookeeper, row.topic);\n          // this.topicTableData.splice(row,1);\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      },\n      handleDialogOpen() {\n        //刷新邮箱列表\n        this.addTopicDialogShow = true;\n      },\n      handleDialogClose() {\n        this.resetForm('addTopicForm');\n        this.addTopicDialogShow = false;\n      },\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            createTopic(this.zookeeper, this.addTopicForm.topic, this.addTopicForm.partitions, this.addTopicForm.replication).then(response => {\n              if (response) {\n                let data = response.data;\n                if (data.code === 200) {\n                  this.$message({\n                    //消息弹窗组件,类似toast\n                    showClose: true,\n                    message: this.topic + '创建成功',\n                    type: 'success'\n                  });\n                  this.getTopicListMethod();\n                  this.handleDialogClose();\n                } else {\n                  this.$message({\n                    //消息弹窗组件,类似toast\n                    showClose: true,\n                    message: data.msg,\n                    type: 'error'\n                  });\n                }\n              }\n            });\n          }\n        })\n      },\n      resetForm(formName) {\n        this.$nextTick(() => {\n          if (this.$refs[formName] !== undefined) {\n            this.$refs[formName].resetFields();\n          }\n        })\n      },\n    },\n    mounted() {\n      this.getZooKeeperServerListMethod();\n      this.getTopicListMethod();\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/pages/kafka/operate/Topic.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('el-row',{staticStyle:{\"margin-bottom\":\"20px\"},attrs:{\"gutter\":5}},[_c('el-col',{attrs:{\"span\":4,\"offset\":19}},[_c('span',[_vm._v(\"更多功能：\")]),_c('el-link',{attrs:{\"href\":_vm.kafkaManagerAddress,\"target\":\"_blank\",\"type\":\"primary\"}},[_vm._v(\"KafkaManager\")])],1)],1),_vm._v(\" \"),_c('el-divider'),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":5}},[_c('el-col',{attrs:{\"span\":3}},[_c('span',[_vm._v(\"请选择zookeeper\")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('el-select',{attrs:{\"placeholder\":\"请选择zookeeper\",\"size\":\"mini\"},on:{\"change\":_vm.zookeeperChangeMethod},model:{value:(_vm.zookeeper),callback:function ($$v) {_vm.zookeeper=$$v},expression:\"zookeeper\"}},_vm._l((_vm.zookeeperList),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.name,\"value\":item.address}},[_c('span',{staticStyle:{\"float\":\"left\"}},[_vm._v(_vm._s(item.name))]),_vm._v(\" \"),_c('span',{staticStyle:{\"float\":\"right\",\"color\":\"#8492a6\",\"font-size\":\"13px\"}},[_vm._v(_vm._s(item.address))])])}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.$router.push('/zookeeper/zookeeperServer')}}},[_vm._v(\"zookeeper管理\\n      \")])],1)],1),_vm._v(\" \"),_c('el-row',{staticStyle:{\"margin\":\"40px 0 0 0\"},attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.addTopicDialogShow = true}}},[_vm._v(\"添加Topic\")])],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"870px\"},attrs:{\"data\":_vm.topicTableData.filter(function (data) { return !_vm.topicSearch || data.topic.toLowerCase().includes(_vm.topicSearch.toLowerCase()); })}},[_c('el-table-column',{attrs:{\"prop\":\"topic\",\"label\":\"Topic名称\",\"width\":\"400\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"\",\"prop\":\"createDate\",\"label\":\"创建日期\",\"formatter\":_vm.formatCreateDate,\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"createBy\",\"label\":\"创建人\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"align\":\"right\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入关键字搜索\"},model:{value:(_vm.topicSearch),callback:function ($$v) {_vm.topicSearch=$$v},expression:\"topicSearch\"}})]}},{key:\"default\",fn:function(scope){return [_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"分区详情\",\"placement\":\"top-start\"}},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"plain\":\"\",\"icon\":\"el-icon-view\"},on:{\"click\":function($event){return _vm.getTopicPartitionDetailMethod(scope.$index, scope.row)}}})],1),_vm._v(\" \"),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"删除\",\"placement\":\"top-start\"}},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"plain\":\"\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.handleDelete(scope.$index, scope.row)}}})],1)]}}])})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加Topic\",\"visible\":_vm.addTopicDialogShow,\"width\":\"45%\"},on:{\"open\":_vm.handleDialogOpen,\"close\":_vm.handleDialogClose}},[_c('el-form',{ref:\"addTopicForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.addTopicForm,\"status-icon\":\"\",\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"Topic名称\",\"prop\":\"topic\"}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-input',{model:{value:(_vm.addTopicForm.topic),callback:function ($$v) {_vm.$set(_vm.addTopicForm, \"topic\", $$v)},expression:\"addTopicForm.topic\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"分区数\",\"prop\":\"partitions\"}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-input',{model:{value:(_vm.addTopicForm.partitions),callback:function ($$v) {_vm.$set(_vm.addTopicForm, \"partitions\", $$v)},expression:\"addTopicForm.partitions\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"副本数\",\"prop\":\"replication\"}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-input',{model:{value:(_vm.addTopicForm.replication),callback:function ($$v) {_vm.$set(_vm.addTopicForm, \"replication\", $$v)},expression:\"addTopicForm.replication\"}})],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addTopicDialogShow = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm('addTopicForm')}}},[_vm._v(\"添 加\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"分区详情\",\"visible\":_vm.topicPartitionDetailDialogShow,\"width\":\"55%\"},on:{\"update:visible\":function($event){_vm.topicPartitionDetailDialogShow=$event}}},[_c('el-table',{staticStyle:{\"width\":\"800px\"},attrs:{\"data\":_vm.topicPartitionDetailTableData}},[_c('el-table-column',{attrs:{\"prop\":\"topic\",\"label\":\"Topic\",\"width\":\"350\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"partition\",\"label\":\"分区\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"address\",\"label\":\"副本分布\",\"width\":\"400\"}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a10b907c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/kafka/operate/Topic.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a10b907c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Topic.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Topic.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Topic.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a10b907c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Topic.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a10b907c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/kafka/operate/Topic.vue\n// module id = null\n// module chunks = ","import request from \"../request\";\n\nconst getZooKeeperServerListUrl = \"/zookeeper/getZooKeeperServerList\";\nconst saveZookeeperServerUrl = \"/zookeeper/save\";\nconst testConnUrl = \"/zookeeper/testConn\";\n//获取分区数据详情\nconst getTopicPartitionDetailUrl = \"/kafka/operate/getTopicPartitionDetail\";\n\nexport function getZooKeeperServerList() {\n  return request.get(getZooKeeperServerListUrl);\n}\n\nexport function saveZookeeperServer(address, name, deleted) {\n  return request.post(saveZookeeperServerUrl, {\n    \"address\": address,\n    \"name\": name,\n    \"deleted\": deleted\n  });\n}\n\nexport function testConn(address) {\n  return request.get(testConnUrl, {address: address});\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/zookeeperApi.js"],"sourceRoot":""}